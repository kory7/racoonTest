{"version":3,"sources":["components/Principal.js","components/Pop.js","App.js","serviceWorker.js","index.js"],"names":["Principal","changePop","selectId","_this","props","id","pop","classes","this","react_default","a","createElement","TableRow_default","TableCell_default","desc","Button_default","variant","color","className","space","onClick","Component","withStyles","theme","marginRight","Pop","controlPop","closePop","Paper_default","popup","Card_default","popWindow","CardActionArea_default","CardMedia_default","media","image","img","title","CardContent_default","Typography_default","gutterBottom","component","CardActions_default","size","card","maxWidth","height","position","width","top","left","right","bottom","margin","backgroundColor","zIndex","App","state","raccoon","turnPop","setState","callApi","_callee","response","body","regenerator_default","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_this2","then","res","feelings","catch","err","console","log","_this3","Table_default","root","TableHead_default","table","TableBody_default","map","c","components_Principal","key","imgUrl","components_Pop","marginTop","spacing","unit","overflowX","minWidth","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.738799d4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nconst styles = theme => ({\r\n  space: {\r\n    marginRight: 30\r\n  }\r\n});\r\nclass Principal extends Component {\r\n  changePop = () => {\r\n    let selectId = this.props.id;\r\n    this.props.pop(true, selectId);\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <TableRow>\r\n        <TableCell>{this.props.id}</TableCell>\r\n        <TableCell>{this.props.desc}</TableCell>\r\n        <TableCell>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className={classes.space}\r\n            onClick={this.changePop}\r\n          >\r\n            Detalle\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"secondary\">\r\n            Elegir\r\n          </Button>\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(Principal);\r\n","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345\r\n  },\r\n  media: {\r\n    height: 350\r\n  },\r\n  popup: {\r\n    position: \"fixed\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    margin: \"auto\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\"\r\n  },\r\n  popWindow: {\r\n    position: \"absolute\",\r\n    zIndex: 99,\r\n    left: \"40%\",\r\n    right: \"40%\",\r\n    top: \"20%\"\r\n  }\r\n};\r\nclass Pop extends Component {\r\n  controlPop = () => {\r\n    this.props.closePop(true);\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <Paper className={classes.popup}>\r\n        <Card className={classes.popWindow}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={this.props.img}\r\n              title={this.props.desc}\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                {this.props.desc}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n          <CardActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              onClick={this.controlPop}\r\n            >\r\n              Cerrar\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" size=\"small\">\r\n              Justo así\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(Pop);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Principal from \"./components/Principal\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Pop from \"./components/Pop\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  }\n});\n\nclass App extends Component {\n  state = {\n    raccoon: \"\",\n    popup: false,\n    id: \"\"\n  };\n\n  turnPop = (pop, id) => {\n    if (pop) {\n      this.setState({\n        popup: !this.state.popup,\n        id: id\n      });\n    }\n  };\n\n  closePop = pop => {\n    if (pop) {\n      this.setState({\n        popup: !this.state.popup\n      });\n    }\n  };\n  componentDidMount() {\n    this.callApi()\n      .then(res => {\n        this.setState({ raccoon: res.feelings });\n      })\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch(\"http://159.89.143.117:3001/raccoon/feelings\");\n    const body = await response.json();\n    return body;\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <h1 className=\"title\">\n          ¿En la escala del raccoon cómo te sientes hoy?\n        </h1>\n        <Paper>\n          <Table className={classes.root}>\n            <TableHead className={classes.table}>\n              <TableRow>\n                <TableCell>#</TableCell>\n                <TableCell>Me siento ...</TableCell>\n                <TableCell>Acciones</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.raccoon ? (\n                this.state.raccoon.map(c => {\n                  return (\n                    <Principal\n                      key={c.id}\n                      id={c.id}\n                      desc={c.desc}\n                      imgUrl={c.imgUrl}\n                      pop={this.turnPop}\n                    />\n                  );\n                })\n              ) : (\n                <TableRow>\n                  <TableCell>\"Cargando\"</TableCell>\n                  <TableCell>\"Cargando\"</TableCell>\n                  <TableCell>\"Cargando\"</TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </Paper>\n        {this.state.popup ? (\n          <Pop\n            img={this.state.raccoon[this.state.id - 1].imgUrl}\n            desc={this.state.raccoon[this.state.id - 1].desc}\n            closePop={this.closePop}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}